import{_ as n,o as s,c as a,a as t}from"./app.7c042103.js";const p={},e=t(`<p><span style="color:red;">\u4F7F\u7528JPA\u5C31\u5C3D\u91CF\u4E0D\u8981\u4F7F\u7528\u539F\u751FSQL\uFF01\uFF01\uFF01\uFF01\uFF01\uFF01\uFF01</span></p><h2 id="hql" tabindex="-1"><a class="header-anchor" href="#hql" aria-hidden="true">#</a> HQL</h2><div class="language-hql ext-hql line-numbers-mode"><pre class="language-hql"><code>@Query(&quot;select new com.cicjust.idc.entity.VO.BankReceiptVO(ibp.id,ifp.filePath,ibp.receiptDate,ibp.payerName,ibp.receiverName,ibp.amount,ibp.foreignFee,ibp.currency) from IdcBankReceiptPO ibp left join IdcFileBasicsPO ifp on ibp.basicsId=ifp.id &quot; +
            &quot;and (#{#dto.id} is null or ibp.reconciliationBillId=#{#dto.id})&quot; +
            &quot;and (#{#dto.date} is null or ibp.receiptDate=#{#dto.date})&quot; +
            &quot;and (#{#dto.payerName} is null or ibp.payerName like concat(&#39;%&#39;,#{#dto.payerName},&#39;%&#39;) )&quot; +
            &quot;and (#{#dto.receiverName} is null or ibp.receiverName like concat(&#39;%&#39;,#{#dto.receiverName},&#39;%&#39;) )order by ibp.receiptDate asc&quot;)
    Page&lt;BankReceiptVO&gt; findAllByReconciliationBillId(@Param(&quot;dto&quot;) BankReceiptDTO dto, Pageable page);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u52A8\u6001\u6761\u4EF6-\u4E0D\u597D\u7528" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u6761\u4EF6-\u4E0D\u597D\u7528" aria-hidden="true">#</a> \u52A8\u6001\u6761\u4EF6\uFF08\u4E0D\u597D\u7528\uFF09</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IdcHandoverReceiptPO</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> idcHandoverReceiptDao<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Specification</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IdcHandoverReceiptPO</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> <span class="token punctuation">(</span>root<span class="token punctuation">,</span> criteriaQuery<span class="token punctuation">,</span> criteriaBuilder<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">Predicate</span> predicate <span class="token operator">=</span> criteriaBuilder<span class="token punctuation">.</span><span class="token function">conjunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> companyNameOrTaxNum <span class="token operator">=</span> handoverReceiptConditionDto<span class="token punctuation">.</span><span class="token function">getCompanyNameOrTaxNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> periodId <span class="token operator">=</span> handoverReceiptConditionDto<span class="token punctuation">.</span><span class="token function">getPeriodId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Integer</span> status <span class="token operator">=</span> handoverReceiptConditionDto<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


            <span class="token keyword">if</span> <span class="token punctuation">(</span>status<span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">HandoverReceiptStatusEnum</span><span class="token punctuation">.</span>ALL<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//\u67E5\u8BE2\u5168\u90E8\u72B6\u6001</span>
                predicate<span class="token punctuation">.</span><span class="token function">getExpressions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>
                        criteriaBuilder<span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IdcHandoverReceiptPO</span><span class="token punctuation">&gt;</span></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>companyNameOrTaxNum<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Predicate</span> p1 <span class="token operator">=</span> criteriaBuilder<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;taxNumber&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;%&quot;</span><span class="token operator">+</span>companyNameOrTaxNum<span class="token operator">+</span><span class="token string">&quot;%&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Predicate</span> p2 <span class="token operator">=</span> criteriaBuilder<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;companyName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;%&quot;</span><span class="token operator">+</span>companyNameOrTaxNum<span class="token operator">+</span><span class="token string">&quot;%&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                predicate<span class="token punctuation">.</span><span class="token function">getExpressions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>
                        criteriaBuilder<span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">)</span>
                <span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>periodId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                predicate<span class="token punctuation">.</span><span class="token function">getExpressions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>
                        criteriaBuilder<span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IdcHandoverReceiptPO</span><span class="token punctuation">&gt;</span></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;periodId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span>periodId<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//taxNumber\u5728\u7528\u6237\u7684\u6743\u9650\u5217\u8868\u5185</span>
            predicate<span class="token punctuation">.</span><span class="token function">getExpressions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>
                    criteriaBuilder<span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;taxNumber&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">in</span><span class="token punctuation">(</span>allLocalUserPassedAccountTaxNumer<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>


            <span class="token keyword">return</span> predicate<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>pageable<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="onetomany-\u5355\u65B9\u7EF4\u62A4\u5173\u7CFB" tabindex="-1"><a class="header-anchor" href="#onetomany-\u5355\u65B9\u7EF4\u62A4\u5173\u7CFB" aria-hidden="true">#</a> OneToMany \uFF08\u5355\u65B9\u7EF4\u62A4\u5173\u7CFB\uFF09</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IdcVatItemPO</span><span class="token punctuation">&gt;</span></span> idcVatItemPO<span class="token punctuation">;</span>
    
    <span class="token annotation punctuation">@Fetch</span><span class="token punctuation">(</span><span class="token class-name">FetchMode</span><span class="token punctuation">.</span>SUBSELECT<span class="token punctuation">)</span>
    <span class="token annotation punctuation">@OneToMany</span><span class="token punctuation">(</span>cascade <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">CascadeType</span><span class="token punctuation">.</span>REMOVE<span class="token punctuation">}</span><span class="token punctuation">,</span>fetch <span class="token operator">=</span> <span class="token class-name">FetchType</span><span class="token punctuation">.</span>LAZY<span class="token punctuation">)</span>
    <span class="token annotation punctuation">@JoinColumn</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;main_id&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@JsonIgnore</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IdcVatItemPO</span><span class="token punctuation">&gt;</span></span> <span class="token function">getIdcVatItemPO</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> idcVatItemPO<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setIdcVatItemPO</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">IdcVatItemPO</span><span class="token punctuation">&gt;</span></span> idcVatItemPO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>idcVatItemPO <span class="token operator">=</span> idcVatItemPO<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>Hibernate: <span class="token keyword">update</span> idc_vat_item <span class="token keyword">set</span> main_id<span class="token operator">=</span><span class="token boolean">null</span> <span class="token keyword">where</span> main_id<span class="token operator">=</span>?
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>@JoinColum\u5149\u79C3\u79C3\u4E00\u4E2Aname\u65F6\uFF0C\u5728\u7531\u5355\u65B9\u7EA7\u8054\u5220\u9664\u591A\u65B9\u65F6\uFF0C\u7531\u4E8E\u5220\u9664\u5355\u65B9\uFF0C\u4F1A\u5148\u7EA7\u8054\u53D8\u66F4\u591A\u65B9\u7684\u5916\u952E\u4E3Anull\uFF0C\u4F46\u5982\u679C\u6570\u636E\u5E93\u8BBE\u7F6E\u5916\u952E\u4E0D\u80FD\u4E3Anull\u65F6\uFF0C\u5C31\u4F1A\u4EA7\u751F\u62A5\u9519\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>dao<span class="token punctuation">.</span></span>DataIntegrityViolationException</span><span class="token operator">:</span> could not execute statement<span class="token punctuation">;</span> SQL <span class="token punctuation">[</span>n<span class="token operator">/</span>a<span class="token punctuation">]</span><span class="token punctuation">;</span> constraint <span class="token punctuation">[</span><span class="token keyword">null</span><span class="token punctuation">]</span><span class="token punctuation">;</span> nested exception is <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span>ConstraintViolationException</span><span class="token operator">:</span> could not execute statement
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><p><span style="color:red;">\u6B64\u65F6\u53EF\u4EE5\u6DFB\u52A0<strong>updatable = false</strong> \u53C2\u6570\u53D6\u6D88\u5355\u65B9\u5BF9\u591A\u65B9\u7684\u7EA7\u8054\u66F4\u65B0</span></p><ul><li>\u5982\u679C\u60F3\u901A\u8FC7\u5728\u5355\u65B9\u5B9E\u4F53\u7684List\u91CC\u9762remove\u5143\u7D20\u8FBE\u5230\u5220\u9664\u591A\u65B9\u5143\u7D20\u7684\u9700\u6C42\uFF0C\u6DFB\u52A0<strong>orphanRemoval=true</strong></li></ul>`,11),o=[e];function c(i,u){return s(),a("div",null,o)}var k=n(p,[["render",c],["__file","JPA.html.vue"]]);export{k as default};
