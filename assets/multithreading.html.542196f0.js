import{_ as n,o as s,c as a,a as t}from"./app.7c042103.js";const p={},e=t(`<h2 id="\u5E38\u7528\u7684\u591A\u7EBF\u7A0B\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u7684\u591A\u7EBF\u7A0B\u7C7B" aria-hidden="true">#</a> \u5E38\u7528\u7684\u591A\u7EBF\u7A0B\u7C7B</h2><h3 id="countdownlatch" tabindex="-1"><a class="header-anchor" href="#countdownlatch" aria-hidden="true">#</a> CountDownLatch</h3><p>\u9700\u8981\u7B49\u5F85\u591A\u4E2A\u7EBF\u7A0B\u90FD\u6267\u884C\u5B8C\uFF0C\u518D\u6267\u884C\u65B9\u6CD5 <strong>\uFF08\u53EA\u80FD\u4E00\u6B21\u6027\u4F7F\u7528\uFF09</strong></p><h3 id="semaphore" tabindex="-1"><a class="header-anchor" href="#semaphore" aria-hidden="true">#</a> Semaphore</h3><p>\u63A7\u5236\u5E76\u53D1\u6570\u91CF<code>acquire</code>\u548C<code>release</code> \u7C7B\u4F3C\u52A0\u9501\u4E0A\u9501</p><h3 id="cyclicbarrier" tabindex="-1"><a class="header-anchor" href="#cyclicbarrier" aria-hidden="true">#</a> CyclicBarrier</h3><p>\u5F53await\u7684\u6570\u5230\u4E86\u6307\u5B9A\u6570\u91CF\u624D\u6267\u884C\u4E0B\u9762\u7684\u65B9\u6CD5 <strong>\uFF08\u548CCountDownLatch\u76F8\u53CD\uFF0C\u8FD9\u4E2A\u662F\u52A0\uFF0C\u90A3\u4E2A\u662F\u51CF\uFF0C\u8FD9\u4E2A\u53EF\u4EE5\u591A\u6B21\u4F7F\u7528\uFF09</strong></p><h3 id="guava\u4E2D\u7684\u5E76\u53D1\u63A7\u5236\u7C7B-ratelimiter" tabindex="-1"><a class="header-anchor" href="#guava\u4E2D\u7684\u5E76\u53D1\u63A7\u5236\u7C7B-ratelimiter" aria-hidden="true">#</a> Guava\u4E2D\u7684\u5E76\u53D1\u63A7\u5236\u7C7B-RateLimiter</h3><p>\u548C<code>Semaphore</code>\u7C7B\u4F3C,\u7528\u4E8E\u9650\u6D41 Semaphore\u53EA\u80FD\u63A7\u5236\u603B\u6570\uFF0CRateLimiter\u53EF\u4EE5\u63A7\u5236\u6D41\u901F</p><h2 id="completablefuture-jdk1-8" tabindex="-1"><a class="header-anchor" href="#completablefuture-jdk1-8" aria-hidden="true">#</a> CompletableFuture &gt;JDK1.8</h2><h3 id="\u521B\u5EFA\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u65B9\u5F0F" aria-hidden="true">#</a> \u521B\u5EFA\u65B9\u5F0F</h3><h4 id="\u9ED8\u8BA4\u7EBF\u7A0B\u6C60" tabindex="-1"><a class="header-anchor" href="#\u9ED8\u8BA4\u7EBF\u7A0B\u6C60" aria-hidden="true">#</a> \u9ED8\u8BA4\u7EBF\u7A0B\u6C60</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> future <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u9ED8\u8BA4\u4F7F\u7528 ForkJoinPool.commonPool()\uFF0CcommonPool\u662F\u4E00\u4E2A\u4F1A\u88AB\u5F88\u591A\u4EFB\u52A1 \u5171\u4EAB \u7684\u7EBF\u7A0B\u6C60\uFF0C\u6BD4\u5982\u540C\u4E00 JVM \u4E0A\u7684\u6240\u6709 CompletableFuture\u3001\u5E76\u884C Stream \u90FD\u5C06\u5171\u4EAB commonPool\uFF0CcommonPool \u8BBE\u8BA1\u65F6\u7684\u76EE\u6807\u573A\u666F\u662F\u8FD0\u884C \u975E\u963B\u585E\u7684 CPU \u5BC6\u96C6\u578B\u4EFB\u52A1\uFF0C\u4E3A\u6700\u5927\u5316\u5229\u7528 CPU\uFF0C\u5176\u7EBF\u7A0B\u6570\u9ED8\u8BA4\u4E3A CPU \u6570\u91CF - 1\u3002</p><h4 id="\u81EA\u5B9A\u4E49\u7EBF\u7A0B\u6C60" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u7EBF\u7A0B\u6C60" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u7EBF\u7A0B\u6C60</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">ThreadPoolExecutor</span> pool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span>
                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>DiscardOldestPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">runAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pool<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="api\u8BE6\u89E3" tabindex="-1"><a class="header-anchor" href="#api\u8BE6\u89E3" aria-hidden="true">#</a> API\u8BE6\u89E3</h3><h4 id="\u6784\u5EFA\u5F02\u6B65\u4EFB\u52A1" tabindex="-1"><a class="header-anchor" href="#\u6784\u5EFA\u5F02\u6B65\u4EFB\u52A1" aria-hidden="true">#</a> \u6784\u5EFA\u5F02\u6B65\u4EFB\u52A1</h4><h5 id="runasync" tabindex="-1"><a class="header-anchor" href="#runasync" aria-hidden="true">#</a> runAsync</h5><p>\u8FDB\u884C\u6570\u636E\u5904\u7406\uFF0C\u63A5\u6536\u524D\u4E00\u6B65\u9AA4\u4F20\u9012\u7684\u6570\u636E\uFF0C\u65E0\u8FD4\u56DE\u503C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">runAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u4F7F\u7528\u9ED8\u8BA4\u7EBF\u7A0B\u6C60</span>
    <span class="token class-name">CompletableFuture</span> cf <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">runAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">assertFalse</span><span class="token punctuation">(</span>cf<span class="token punctuation">.</span><span class="token function">isDone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token comment">//\u4F7F\u7528\u81EA\u5B9A\u4E49\u7EBF\u7A0B\u6C60</span>
    <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">runAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                                 <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newSingleThreadExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="supplyasync" tabindex="-1"><a class="header-anchor" href="#supplyasync" aria-hidden="true">#</a> supplyAsync</h5><p>\u8FDB\u884C\u6570\u636E\u5904\u7406\uFF0C\u63A5\u6536\u524D\u4E00\u6B65\u9AA4\u4F20\u9012\u7684\u6570\u636E\uFF0C\u5904\u7406\u52A0\u5DE5\u540E\u8FD4\u56DE\u3002\u8FD4\u56DE\u6570\u636E\u7C7B\u578B\u53EF\u4EE5\u548C\u524D\u4E00\u6B65\u9AA4\u8FD4\u56DE\u7684\u6570\u636E\u7C7B\u578B\u4E0D\u540C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ExecutionException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> f <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">//ForkJoinPool.commonPool-worker-1\u7EBF\u7A0B</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u963B\u585E\u7B49\u5F853\u79D2 </span>
        <span class="token class-name">String</span> result <span class="token operator">=</span> f<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//main\u7EBF\u7A0B</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u5355\u4EFB\u52A1\u7ED3\u679C\u6D88\u8D39" tabindex="-1"><a class="header-anchor" href="#\u5355\u4EFB\u52A1\u7ED3\u679C\u6D88\u8D39" aria-hidden="true">#</a> \u5355\u4EFB\u52A1\u7ED3\u679C\u6D88\u8D39</h4><h5 id="thenapply" tabindex="-1"><a class="header-anchor" href="#thenapply" aria-hidden="true">#</a> thenApply</h5><p>\u5728\u524D\u4E00\u4E2A\u9636\u6BB5\u4E0A\u5E94\u7528thenApply\u51FD\u6570\uFF0C\u5C06\u4E0A\u4E00\u9636\u6BB5\u5B8C\u6210\u7684\u7ED3\u679C\u4F5C\u4E3A\u5F53\u524D\u9636\u6BB5\u7684\u5165\u53C2</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">thenApply</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ExecutionException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token class-name">CompletableFuture</span> cf <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">completedFuture</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thenApplyAsync</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> s<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thenApply</span><span class="token punctuation">(</span>s<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> s <span class="token operator">+</span> <span class="token string">&quot;:body&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cf<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="thenaccept" tabindex="-1"><a class="header-anchor" href="#thenaccept" aria-hidden="true">#</a> thenAccept</h5><p>\u6D88\u8D39\u524D\u4E00\u9636\u6BB5\u7684\u7ED3\u679C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">thenAccept</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> future <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;message&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thenAccept</span><span class="token punctuation">(</span><span class="token punctuation">(</span>consumer<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>consumer<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="thenrun" tabindex="-1"><a class="header-anchor" href="#thenrun" aria-hidden="true">#</a> thenRun</h4><p>\u5F53\u4E0A\u4E00\u9636\u6BB5\u5B8C\u6210\u540E\uFF0C\u6267\u884C\u672C\u9636\u6BB5\u7684\u4EFB\u52A1</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">thenRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u6267\u884C\u5F02\u6B65\u4EFB\u52A1</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6267\u884C\u4EFB\u52A1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thenRun</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// Computation Finished.</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E0A\u4E00\u9636\u6BB5\u4EFB\u52A1\u6267\u884C\u5B8C\u6210&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u5408\u5E76\u7ED3\u679C\u6D88\u8D39" tabindex="-1"><a class="header-anchor" href="#\u5408\u5E76\u7ED3\u679C\u6D88\u8D39" aria-hidden="true">#</a> \u5408\u5E76\u7ED3\u679C\u6D88\u8D39</h4><h5 id="thencombine" tabindex="-1"><a class="header-anchor" href="#thencombine" aria-hidden="true">#</a> thenCombine</h5><p>\u5408\u5E76\u53E6\u5916\u4E00\u4E2A\u4EFB\u52A1\uFF0C\u4E24\u4E2A\u4EFB\u52A1\u90FD\u5B8C\u6210\u540E\uFF0C\u6267\u884CBiFunction\uFF0C\u5165\u53C2\u4E3A\u4E24\u4E2A\u4EFB\u52A1\u7ED3\u679C\uFF0C\u8FD4\u56DE\u65B0\u7ED3\u679C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">thenCombine</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> cfA <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;processing a...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> cfB <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;processing b...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot; world&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> cfC <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;processing c...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;, I&#39;m CodingTao!&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cfA<span class="token punctuation">.</span><span class="token function">thenCombine</span><span class="token punctuation">(</span>cfB<span class="token punctuation">,</span> <span class="token punctuation">(</span>resultA<span class="token punctuation">,</span> resultB<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>resultA <span class="token operator">+</span> resultB<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// hello world</span>
        <span class="token keyword">return</span> resultA <span class="token operator">+</span> resultB<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thenCombine</span><span class="token punctuation">(</span>cfC<span class="token punctuation">,</span> <span class="token punctuation">(</span>resultAB<span class="token punctuation">,</span> resultC<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>resultAB <span class="token operator">+</span> resultC<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// hello world, I&#39;m CodingTao!</span>
        <span class="token keyword">return</span> resultAB <span class="token operator">+</span> resultC<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="thenacceptboth" tabindex="-1"><a class="header-anchor" href="#thenacceptboth" aria-hidden="true">#</a> thenAcceptBoth</h5><p>\u5408\u5E76\u53E6\u5916\u4E00\u4E2A\u4EFB\u52A1\uFF0C\u4E24\u4E2A\u4EFB\u52A1\u90FD\u5B8C\u6210\u540E\uFF0C\u6267\u884C\u8FD9\u4E2A\u65B9\u6CD5\u7B49\u5F85\u7B2C\u4E00\u4E2A\u9636\u6BB5\u7684\u5B8C\u6210(\u5927\u5199\u8F6C\u6362)\uFF0C \u5B83\u7684\u7ED3\u679C\u4F20\u7ED9\u4E00\u4E2A\u6307\u5B9A\u7684\u8FD4\u56DECompletableFuture\u51FD\u6570\uFF0C\u5B83\u7684\u7ED3\u679C\u5C31\u662F\u8FD4\u56DE\u7684CompletableFuture\u7684\u7ED3\u679C\uFF0C\u5165\u53C2\u4E3A\u4E24\u4E2A\u4EFB\u52A1\u7ED3\u679C\uFF0C\u4E0D\u8FD4\u56DE\u65B0\u7ED3\u679C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">thenAcceptBoth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> cfA <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;resultA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> cfB <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;resultB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cfA<span class="token punctuation">.</span><span class="token function">thenAcceptBoth</span><span class="token punctuation">(</span>cfB<span class="token punctuation">,</span> <span class="token punctuation">(</span>resultA<span class="token punctuation">,</span> resultB<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">//resultA,resultB</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>resultA<span class="token operator">+</span><span class="token string">&quot;,&quot;</span><span class="token operator">+</span>resultB<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="runafterboth" tabindex="-1"><a class="header-anchor" href="#runafterboth" aria-hidden="true">#</a> runAfterBoth</h5><p>\u5408\u5E76\u53E6\u5916\u4E00\u4E2A\u4EFB\u52A1\uFF0C\u4E24\u4E2A\u4EFB\u52A1\u90FD\u5B8C\u6210\u540E\uFF0C\u6267\u884CRunnable\uFF0C\u6CE8\u610F\uFF0C\u8FD9\u91CC\u7684\u4E24\u4E2A\u4EFB\u52A1\u662F\u540C\u65F6\u6267\u884C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">runAfterBoth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> cfA <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;process a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;resultA&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> cfB <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;process b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;resultB&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cfB<span class="token punctuation">.</span><span class="token function">runAfterBoth</span><span class="token punctuation">(</span>cfA<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">//resultA,resultB</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4EFB\u52A1A\u548C\u4EFB\u52A1B\u540C\u65F6\u5B8C\u6210&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">6000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u4EFB\u4E00\u7ED3\u679C\u6D88\u8D39" tabindex="-1"><a class="header-anchor" href="#\u4EFB\u4E00\u7ED3\u679C\u6D88\u8D39" aria-hidden="true">#</a> \u4EFB\u4E00\u7ED3\u679C\u6D88\u8D39</h4><h5 id="applytoeither" tabindex="-1"><a class="header-anchor" href="#applytoeither" aria-hidden="true">#</a> applyToEither</h5><p>\u5176\u4E2D\u4EFB\u4E00\u4EFB\u52A1\u5B8C\u6210\u540E\uFF0C\u6267\u884CConsumer\uFF0C\u6D88\u8D39\u7ED3\u679C\uFF0C\u5165\u53C2\u4E3A\u5DF2\u5B8C\u6210\u7684\u4EFB\u52A1\u7ED3\u679C\u3002\u4E0D\u8FD4\u56DE\u65B0\u7ED3\u679C\uFF0C\u8981\u6C42\u4E24\u4E2A\u4EFB\u52A1\u7ED3\u679C\u4E3A\u540C\u4E00\u7C7B\u578B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">applyToEither</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ExecutionException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> futureA <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token string">&quot;\u901A\u8FC7\u65B9\u5F0FA\u83B7\u53D6\u5546\u54C1a&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> futureB <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token string">&quot;\u901A\u8FC7\u65B9\u5F0FB\u83B7\u53D6\u5546\u54C1a&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> futureC <span class="token operator">=</span> futureA<span class="token punctuation">.</span><span class="token function">applyToEither</span><span class="token punctuation">(</span>futureB<span class="token punctuation">,</span> product <span class="token operator">-&gt;</span> <span class="token string">&quot;\u7ED3\u679C:&quot;</span> <span class="token operator">+</span> product<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u7ED3\u679C:\u901A\u8FC7\u65B9\u5F0FA\u83B7\u53D6\u5546\u54C1a</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>futureC<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="accepteither" tabindex="-1"><a class="header-anchor" href="#accepteither" aria-hidden="true">#</a> acceptEither</h5><p>\u5176\u4E2D\u4EFB\u4E00\u4EFB\u52A1\u5B8C\u6210\u540E\uFF0C\u6267\u884CRunnable\uFF0C\u6D88\u8D39\u7ED3\u679C\uFF0C\u65E0\u5165\u53C2\u3002\u4E0D\u8FD4\u56DE\u65B0\u7ED3\u679C\uFF0C\u4E0D\u8981\u6C42\u4E24\u4E2A\u4EFB\u52A1\u7ED3\u679C\u4E3A\u540C\u4E00\u7C7B\u578B</p><h5 id="runaftereither" tabindex="-1"><a class="header-anchor" href="#runaftereither" aria-hidden="true">#</a> runAfterEither</h5><h4 id="\u7EA7\u8054\u4EFB\u52A1" tabindex="-1"><a class="header-anchor" href="#\u7EA7\u8054\u4EFB\u52A1" aria-hidden="true">#</a> \u7EA7\u8054\u4EFB\u52A1</h4><h5 id="thencompose" tabindex="-1"><a class="header-anchor" href="#thencompose" aria-hidden="true">#</a> thenCompose</h5><p>\u5F53\u539F\u4EFB\u52A1\u5B8C\u6210\u540E\uFF0C\u4EE5\u5176\u7ED3\u679C\u4E3A\u53C2\u6570\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u4EFB\u52A1\uFF08\u800C\u4E0D\u662F\u65B0\u7ED3\u679C\uFF0C\u7C7B\u4F3CflatMap\uFF09</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">thenCompose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> original <span class="token operator">=</span> <span class="token string">&quot;Message&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">CompletableFuture</span> cf <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">completedFuture</span><span class="token punctuation">(</span>original<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thenApply</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> <span class="token function">delayedUpperCase</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">thenCompose</span><span class="token punctuation">(</span>upper <span class="token operator">-&gt;</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">completedFuture</span><span class="token punctuation">(</span>original<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thenApply</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> <span class="token function">delayedLowerCase</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">thenApply</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> upper <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// MESSAGEmessage</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cf<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u5355\u4EFB\u52A1\u7ED3\u679C\u6216\u5F02\u5E38\u6D88\u8D39" tabindex="-1"><a class="header-anchor" href="#\u5355\u4EFB\u52A1\u7ED3\u679C\u6216\u5F02\u5E38\u6D88\u8D39" aria-hidden="true">#</a> \u5355\u4EFB\u52A1\u7ED3\u679C\u6216\u5F02\u5E38\u6D88\u8D39</h4><h5 id="handle" tabindex="-1"><a class="header-anchor" href="#handle" aria-hidden="true">#</a> handle</h5><p>\u4EFB\u52A1\u5B8C\u6210\u540E\u6267\u884CBiFunction\uFF0C\u7ED3\u679C\u8F6C\u6362\uFF0C\u5165\u53C2\u4E3A\u7ED3\u679C\u6216\u8005\u5F02\u5E38\uFF0C\u8FD4\u56DE\u65B0\u7ED3\u679C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> future <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;resultA&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">thenApply</span><span class="token punctuation">(</span>resultA <span class="token operator">-&gt;</span> resultA <span class="token operator">+</span> <span class="token string">&quot; resultB&quot;</span><span class="token punctuation">)</span>
            <span class="token comment">// \u4EFB\u52A1 C \u629B\u51FA\u5F02\u5E38</span>
            <span class="token punctuation">.</span><span class="token function">thenApply</span><span class="token punctuation">(</span>resultB <span class="token operator">-&gt;</span> <span class="token punctuation">{</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token comment">// \u5904\u7406\u4EFB\u52A1 C \u7684\u8FD4\u56DE\u503C\u6216\u5F02\u5E38</span>
            <span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BiFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Throwable</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token annotation punctuation">@Override</span>
                <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">Object</span> re<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> throwable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>throwable <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token string">&quot;errorResultC&quot;</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">return</span> re<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">thenApply</span><span class="token punctuation">(</span>resultC <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;resultC:&quot;</span> <span class="token operator">+</span> resultC<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> resultC <span class="token operator">+</span> <span class="token string">&quot; resultD&quot;</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>future<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="whencomplete" tabindex="-1"><a class="header-anchor" href="#whencomplete" aria-hidden="true">#</a> whenComplete</h5><p>\u4EFB\u52A1\u5B8C\u6210\u540E\u6267\u884CBiConsumer\uFF0C\u7ED3\u679C\u6D88\u8D39\uFF0C\u5165\u53C2\u4E3A\u7ED3\u679C\u6216\u8005\u5F02\u5E38\uFF0C\u4E0D\u8FD4\u56DE\u65B0\u7ED3\u679C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">whenComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ExecutionException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u521B\u5EFA\u5F02\u6B65\u6267\u884C\u4EFB\u52A1:</span>
    <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> cf <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;job1 start,time-&gt;&quot;</span><span class="token operator">+</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;job1 exit,time-&gt;&quot;</span><span class="token operator">+</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token number">1.2</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//cf\u6267\u884C\u5B8C\u6210\u540E\u4F1A\u5C06\u6267\u884C\u7ED3\u679C\u548C\u6267\u884C\u8FC7\u7A0B\u4E2D\u629B\u51FA\u7684\u5F02\u5E38\u4F20\u5165\u56DE\u8C03\u65B9\u6CD5</span>
    <span class="token comment">// \u5982\u679C\u662F\u6B63\u5E38\u6267\u884C\uFF0Ca=1.2\uFF0Cb\u5219\u4F20\u5165\u7684\u5F02\u5E38\u4E3Anull</span>
    <span class="token comment">//\u5982\u679C\u5F02\u5E38\u6267\u884C\uFF0Ca=null\uFF0Cb\u5219\u4F20\u5165\u5F02\u5E38\u4FE1\u606F</span>
    <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> cf2<span class="token operator">=</span>cf<span class="token punctuation">.</span><span class="token function">whenComplete</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;job2 start,time-&gt;&quot;</span><span class="token operator">+</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>b<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;error stack trace-&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            b<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;run succ,result-&gt;&quot;</span><span class="token operator">+</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;job2 exit,time-&gt;&quot;</span><span class="token operator">+</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u7B49\u5F85\u5B50\u4EFB\u52A1\u6267\u884C\u5B8C\u6210</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;main thread start wait,time-&gt;&quot;</span><span class="token operator">+</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u5982\u679Ccf\u662F\u6B63\u5E38\u6267\u884C\u7684\uFF0Ccf2.get\u7684\u7ED3\u679C\u5C31\u662Fcf\u6267\u884C\u7684\u7ED3\u679C</span>
    <span class="token comment">//\u5982\u679Ccf\u662F\u6267\u884C\u5F02\u5E38\uFF0C\u5219cf2.get\u4F1A\u629B\u51FA\u5F02\u5E38</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;run result-&gt;&quot;</span><span class="token operator">+</span>cf2<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;main thread exit,time-&gt;&quot;</span><span class="token operator">+</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="exceptionally" tabindex="-1"><a class="header-anchor" href="#exceptionally" aria-hidden="true">#</a> exceptionally</h5><p>\u4EFB\u52A1\u5F02\u5E38\uFF0C\u5219\u6267\u884CFunction\uFF0C\u5F02\u5E38\u8F6C\u6362\uFF0C\u5165\u53C2\u4E3A\u539F\u4EFB\u52A1\u7684\u5F02\u5E38\u4FE1\u606F\uFF0C\u82E5\u539F\u4EFB\u52A1\u65E0\u5F02\u5E38\uFF0C\u5219\u8FD4\u56DE\u539F\u4EFB\u52A1\u7ED3\u679C\uFF0C\u5373\u4E0D\u6267\u884C\u8F6C\u6362</p><h4 id="\u5408\u5E76\u591A\u4E2A\u4EFB\u52A1" tabindex="-1"><a class="header-anchor" href="#\u5408\u5E76\u591A\u4E2A\u4EFB\u52A1" aria-hidden="true">#</a> \u5408\u5E76\u591A\u4E2A\u4EFB\u52A1</h4><h5 id="allof" tabindex="-1"><a class="header-anchor" href="#allof" aria-hidden="true">#</a> allOf</h5><p>\u5408\u5E76\u591A\u4E2Acomplete\u4E3A\u4E00\u4E2A\uFF0C\u7B49\u5F85\u5168\u90E8\u5B8C\u6210</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token comment">// \u521B\u5EFA\u5F02\u6B65\u6267\u884C\u4EFB\u52A1:</span>
        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> cf <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; start job1,time-&gt;&quot;</span><span class="token operator">+</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; exit job1,time-&gt;&quot;</span><span class="token operator">+</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token number">1.2</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> cf2 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; start job2,time-&gt;&quot;</span><span class="token operator">+</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; exit job2,time-&gt;&quot;</span><span class="token operator">+</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token number">3.2</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> cf3 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; start job3,time-&gt;&quot;</span><span class="token operator">+</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span>
<span class="token comment">//            throw new RuntimeException(&quot;test&quot;);</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot; exit job3,time-&gt;&quot;</span><span class="token operator">+</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token number">2.2</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//allof\u7B49\u5F85\u6240\u6709\u4EFB\u52A1\u6267\u884C\u5B8C\u6210\u624D\u6267\u884Ccf4\uFF0C\u5982\u679C\u6709\u4E00\u4E2A\u4EFB\u52A1\u5F02\u5E38\u7EC8\u6B62\uFF0C\u5219cf4.get\u65F6\u4F1A\u629B\u51FA\u5F02\u5E38\uFF0C\u90FD\u662F\u6B63\u5E38\u6267\u884C\uFF0Ccf4.get\u8FD4\u56DEnull</span>
        <span class="token comment">//anyOf\u662F\u53EA\u6709\u4E00\u4E2A\u4EFB\u52A1\u6267\u884C\u5B8C\u6210\uFF0C\u65E0\u8BBA\u662F\u6B63\u5E38\u6267\u884C\u6216\u8005\u6267\u884C\u5F02\u5E38\uFF0C\u90FD\u4F1A\u6267\u884Ccf4\uFF0Ccf4.get\u7684\u7ED3\u679C\u5C31\u662F\u5DF2\u6267\u884C\u5B8C\u6210\u7684\u4EFB\u52A1\u7684\u6267\u884C\u7ED3\u679C</span>
        <span class="token class-name">CompletableFuture</span> cf4<span class="token operator">=</span><span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">allOf</span><span class="token punctuation">(</span>cf<span class="token punctuation">,</span>cf2<span class="token punctuation">,</span>cf3<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">whenComplete</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>b<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;error stack trace-&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                b<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;run succ,result-&gt;&quot;</span><span class="token operator">+</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;main thread start cf4.get(),time-&gt;&quot;</span><span class="token operator">+</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u7B49\u5F85\u5B50\u4EFB\u52A1\u6267\u884C\u5B8C\u6210</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;cf4 run result-&gt;&quot;</span><span class="token operator">+</span>cf4<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;main thread exit,time-&gt;&quot;</span><span class="token operator">+</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u83B7\u53D6\u8FD4\u56DE\u503C\u65B9\u6CD5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">allOf</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CompletableFuture</span><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> futuresList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> allFuturesResult <span class="token operator">=</span>
            <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">allOf</span><span class="token punctuation">(</span>futuresList<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">[</span>futuresList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> allFuturesResult<span class="token punctuation">.</span><span class="token function">thenApply</span><span class="token punctuation">(</span>v <span class="token operator">-&gt;</span>
            futuresList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                    <span class="token function">map</span><span class="token punctuation">(</span>future <span class="token operator">-&gt;</span> future<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                    <span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="anyof" tabindex="-1"><a class="header-anchor" href="#anyof" aria-hidden="true">#</a> anyOf</h5><p>\u5408\u5E76\u591A\u4E2Acomplete\u4E3A\u4E00\u4E2A\uFF0C\u7B49\u5F85\u5176\u4E2D\u4E4B\u4E00\u5B8C\u6210</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">anyOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ExecutionException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> future1 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token string">&quot;Result of Future 1&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> future2 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token string">&quot;Result of Future 2&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> future3 <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token string">&quot;Result of Future 3&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> anyOfFuture <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">anyOf</span><span class="token punctuation">(</span>future1<span class="token punctuation">,</span> future2<span class="token punctuation">,</span> future3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>anyOfFuture<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Result of Future 2</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5176\u4ED6\u76F8\u5173api" tabindex="-1"><a class="header-anchor" href="#\u5176\u4ED6\u76F8\u5173api" aria-hidden="true">#</a> \u5176\u4ED6\u76F8\u5173api</h3><h4 id="future\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#future\u63A5\u53E3" aria-hidden="true">#</a> Future\u63A5\u53E3</h4><ol><li><p>isDone()</p><p>\u5224\u65AD\u4EFB\u52A1\u662F\u5426\u5B8C\u6210\u3002\u4E09\u79CD\u5B8C\u6210\u60C5\u51B5\uFF1Anormally\uFF08\u6B63\u5E38\u6267\u884C\u5B8C\u6BD5\uFF09\u3001exceptionally\uFF08\u6267\u884C\u5F02\u5E38\uFF09\u3001via cancellation\uFF08\u53D6\u6D88\uFF09</p></li><li><p>get()</p><p>\u963B\u585E\u83B7\u53D6\u7ED3\u679C\u6216\u629B\u51FA\u53D7\u68C0\u6D4B\u5F02\u5E38\uFF0C\u9700\u8981\u663E\u793A\u8FDB\u884Ctry...catch\u5904\u7406\u3002</p></li><li><p>get(long timeout,TimeUnit unit)</p><p>\u8D85\u65F6\u963B\u585E\u83B7\u53D6\u7ED3\u679C</p></li><li><p>cancel(boolean mayInterruptIfRunning)</p><p>\u53D6\u6D88\u4EFB\u52A1\uFF0C\u82E5\u4E00\u4E2A\u4EFB\u52A1\u672A\u5B8C\u6210\uFF0C\u5219\u4EE5CancellationException\u5F02\u5E38\u3002\u5176\u76F8\u5173\u672A\u5B8C\u6210\u7684\u5B50\u4EFB\u52A1\u4E5F\u4F1A\u4EE5CompletionException\u7ED3\u675F</p></li><li><p>isCancelled()</p><p>\u662F\u5426\u5DF2\u53D6\u6D88\uFF0C\u5728\u4EFB\u52A1\u6B63\u5E38\u6267\u884C\u5B8C\u6210\u524D\u53D6\u6D88\uFF0C\u624D\u4E3Atrue\u3002\u5426\u5219\u4E3Afalse\u3002</p></li></ol><h4 id="completablefuture\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#completablefuture\u63A5\u53E3" aria-hidden="true">#</a> CompletableFuture\u63A5\u53E3</h4><ol><li><p>join</p><p>\u963B\u585E\u83B7\u53D6\u7ED3\u679C\u6216\u629B\u51FA\u975E\u53D7\u68C0\u5F02\u5E38\u3002</p></li><li><p>getNow(T valueIfAbsent)</p><p>\u82E5\u5F53\u524D\u4EFB\u52A1\u65E0\u7ED3\u679C\uFF0C\u5219\u8FD4\u56DEvalueIfAbsent\uFF0C\u5426\u5219\u8FD4\u56DE\u5DF2\u5B8C\u6210\u4EFB\u52A1\u7684\u7ED3\u679C\u3002</p></li><li><p>complete(T value)</p><p>\u8BBE\u7F6E\u4EFB\u52A1\u7ED3\u679C\uFF0C\u4EFB\u52A1\u6B63\u5E38\u7ED3\u675F\uFF0C\u4E4B\u540E\u7684\u4EFB\u52A1\u72B6\u6001\u4E3A\u5DF2\u5B8C\u6210\u3002</p></li><li><p>completeExceptionally(Throwable ex)</p><p>\u8BBE\u7F6E\u4EFB\u52A1\u5F02\u5E38\u7ED3\u679C\uFF0C\u4EFB\u52A1\u5F02\u5E38\u7ED3\u675F\uFF0C\u4E4B\u540E\u7684\u4EFB\u52A1\u72B6\u6001\u4E3A\u5DF2\u5B8C\u6210\u3002</p></li><li><p>isCompletedExceptionally() \u200B \u5224\u65AD\u4EFB\u52A1\u662F\u5426\u5F02\u5E38\u7ED3\u675F\u3002\u5F02\u5E38\u53EF\u80FD\u7684\u539F\u56E0\u6709\uFF1A\u53D6\u6D88\u3001\u663E\u793A\u8BBE\u7F6E\u4EFB\u52A1\u5F02\u5E38\u7ED3\u679C\u3001\u4EFB\u52A1\u52A8\u4F5C\u6267\u884C\u5F02\u5E38\u7B49\u3002</p></li><li><p>getNumberOfDependents() \u200B \u8FD4\u56DE\u4F9D\u8D56\u5F53\u524D\u4EFB\u52A1\u7684\u4EFB\u52A1\u6570\u91CF\uFF0C\u4E3B\u8981\u7528\u4E8E\u76D1\u63A7\u3002</p></li><li><p>orTimeout(long timeout,TimeUnit unit) <strong>jdk9</strong></p><p>\u8BBE\u7F6E\u4EFB\u52A1\u5B8C\u6210\u8D85\u65F6\u65F6\u95F4\uFF0C\u82E5\u5728\u6307\u5B9A\u65F6\u95F4\u5185\u672A\u6B63\u5E38\u5B8C\u6210\uFF0C\u5219\u4EFB\u52A1\u4F1A\u4EE5\u5F02\u5E38(TimeoutException)\u7ED3\u675F\u3002</p></li><li><p>completeOnTimeout(T value,long timeout,TimeUnit unit) <strong>jdk9</strong></p><p>\u8BBE\u7F6E\u4EFB\u52A1\u5B8C\u6210\u8D85\u65F6\u65F6\u95F4\uFF0C\u82E5\u5728\u6307\u5B9A\u65F6\u95F4\u5185\u672A\u6B63\u5E38\u5B8C\u6210\uFF0C\u5219\u4EE5\u7ED9\u5B9A\u7684value\u4E3A\u4EFB\u52A1\u7ED3\u679C</p></li></ol><h3 id="\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#\u5E94\u7528" aria-hidden="true">#</a> \u5E94\u7528</h3><ol><li>API\u7F51\u5173\u505A\u63A5\u53E3\u7684\u805A\u5408 \u5F02\u6B65\u8C03\u7528\u7528\u6237\u4FE1\u606F\u83B7\u53D6\u548C\u8BA2\u5355\u4FE1\u606F\u83B7\u53D6\uFF0C\u7136\u540E\u805A\u5408\u8FD4\u56DE</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u8FD9\u4E24\u4E2A\u53C2\u6570\u4ECE\u5916\u90E8\u83B7\u5F97</span>
<span class="token class-name">Long</span> userId <span class="token operator">=</span> <span class="token number">10006L</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> orderId <span class="token operator">=</span> <span class="token string">&quot;XXXXXXXXXXXXXXXXXXXXXX&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//\u4ECE\u7528\u6237\u670D\u52A1\u83B7\u53D6\u7528\u6237\u4FE1\u606F</span>
<span class="token class-name">UserInfo</span> userInfo <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">getUserInfo</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u4ECE\u7528\u8BA2\u5355\u52A1\u83B7\u53D6\u8BA2\u5355\u4FE1\u606F</span>
<span class="token class-name">OrderInfo</span> orderInfo <span class="token operator">=</span> orderService<span class="token punctuation">.</span><span class="token function">getOrderInfo</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u8FD4\u56DE\u4E24\u8005\u7684\u805A\u5408DTO</span>
<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">OrderDetailDTO</span><span class="token punctuation">(</span>userInfo<span class="token punctuation">,</span>orderInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderDetailService</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * \u5EFA\u7ACB\u4E00\u4E2A\u7EBF\u7A0B\u6C60\u4E13\u95E8\u4EA4\u7ED9CompletableFuture\u4F7F\u7528
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ThreadPoolExecutor</span> executor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">ArrayBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">OrderService</span> orderService<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">OrderDetailDTO</span> <span class="token function">getOrderDetail</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">,</span> <span class="token class-name">String</span> orderId<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserInfo</span><span class="token punctuation">&gt;</span></span> userInfoCompletableFuture <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> userService<span class="token punctuation">.</span><span class="token function">getUserInfo</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderInfo</span><span class="token punctuation">&gt;</span></span> orderInfoCompletableFuture <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> orderService<span class="token punctuation">.</span><span class="token function">getOrderInfo</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CompletableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OrderDetailDTO</span><span class="token punctuation">&gt;</span></span> result
                <span class="token operator">=</span> userInfoCompletableFuture<span class="token punctuation">.</span><span class="token function">thenCombineAsync</span><span class="token punctuation">(</span>orderInfoCompletableFuture<span class="token punctuation">,</span> <span class="token class-name">OrderDetailDTO</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">,</span> executor<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#\u533A\u522B" aria-hidden="true">#</a> \u533A\u522B</h3><ol><li><p>henComplete\u548Chandle\u533A\u522B</p><p>whenComplete \u4E0E handle \u65B9\u6CD5\u5C31\u7C7B\u4F3C\u4E8E try..catch..finanlly \u4E2D finally \u4EE3\u7801\u5757\u3002\u65E0\u8BBA\u662F\u5426\u53D1\u751F\u5F02\u5E38\uFF0C\u90FD\u5C06\u4F1A\u6267\u884C\u7684\u3002\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u533A\u522B\u5728\u4E8E handle \u652F\u6301\u8FD4\u56DE\u7ED3\u679C\u3002</p></li><li><p>thenApply\u4E0EthenCompose\u7684\u5F02\u540C</p><p>\u5BF9\u4E8EthenApply\uFF0Cfn\u51FD\u6570\u662F\u4E00\u4E2A\u5BF9\u4E00\u4E2A\u5DF2\u5B8C\u6210\u7684stage\u6216\u8005\u8BF4CompletableFuture\u7684\u7684\u8FD4\u56DE\u503C\u8FDB\u884C\u8BA1\u7B97\u3001\u64CD\u4F5C\uFF1B</p><p>\u5BF9\u4E8EthenCompose\uFF0Cfn\u51FD\u6570\u662F\u5BF9\u53E6\u4E00\u4E2ACompletableFuture\u8FDB\u884C\u8BA1\u7B97\u3001\u64CD\u4F5C\u3002</p></li><li><p>\u6709\u65E0Async\u7684\u533A\u522B</p><p>\u6CA1\u6709Async\u7684\u5728CompleteableFuture\u8C03\u7528\u5B83\u7684\u7EBF\u7A0B\u5B9A\u4E49\u7684\u7EBF\u7A0B\u4E0A\u8FD0\u884C\uFF0C\u56E0\u6B64\u901A\u5E38\u4E0D\u77E5\u9053\u5728\u54EA\u91CC\u6267\u884C\u8BE5\u7EBF\u7A0B\u3002\u5982\u679C\u7ED3\u679C\u5DF2\u7ECF\u53EF\u7528\uFF0C\u5B83\u53EF\u80FD\u4F1A\u7ACB\u5373\u6267\u884C\u3002</p><p>\u6709Async\u7684\u65E0\u8BBA\u73AF\u5883\u5982\u4F55\uFF0C\u90FD\u5728\u73AF\u5883\u5B9A\u4E49\u7684\u6267\u884C\u7A0B\u5E8F\u4E0A\u8FD0\u884C\u3002\u4E3A\u6B64CompletableFuture\u901A\u5E38ForkJoinPool.commonPool()\u3002</p></li></ol>`,84),c=[e];function o(l,u){return s(),a("div",null,c)}var k=n(p,[["render",o],["__file","multithreading.html.vue"]]);export{k as default};
